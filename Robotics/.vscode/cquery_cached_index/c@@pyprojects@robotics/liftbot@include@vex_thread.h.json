16
{"last_modification_time":1581739682,"language":2,"import_file":"c:/pyprojects/robotics/liftbot/src/main.cpp","args_hash":9702252571785421998,"includes":[{"line":16,"resolved_path":"c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/chrono"}],"dependencies":["c:/pyprojects/robotics/liftbot/src/main.cpp","c:/pyprojects/robotics/liftbot/include/vex.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/math.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_math.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/sal.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/stdio.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wstdio.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_stdio_config.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/stdlib.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_malloc.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_search.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/stddef.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wstdlib.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/limits.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/string.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_memory.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_memcpy_s.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/errno.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime_string.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wstring.h","c:/pyprojects/robotics/liftbot/include/v5.h","c:/pyprojects/robotics/liftbot/include/v5_api.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/stdint.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/stdarg.h","c:/pyprojects/robotics/liftbot/include/v5_apitypes.h","c:/pyprojects/robotics/liftbot/include/v5_apiuser.h","c:/pyprojects/robotics/liftbot/include/v5_vcs.h","c:/pyprojects/robotics/liftbot/include/v5_cpp.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/chrono","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/yvals_core.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xkeycheck.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/limits","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cfloat","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/float.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/climits","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cwchar","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cstdio","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/wchar.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wconio.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wctype.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wdirect.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wio.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wprocess.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_wtime.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/sys/stat.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/intrin0.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/intrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/setjmp.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/immintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/wmmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/nmmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/smmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/tmmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/pmmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/emmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xmmintrin.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/malloc.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xstddef","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cstddef","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xtr1common","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cstdlib","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/initializer_list","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/ratio","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/type_traits","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/time.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/utility","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xtimec.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/yvals.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/crtdbg.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime_new_debug.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime_new.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/crtdefs.h","c:/pyprojects/robotics/liftbot/include/vex_device.h","c:/pyprojects/robotics/liftbot/include/vex_controller.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/functional","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/exception","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime_exception.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/eh.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_terminate.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/tuple","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/new","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xutility","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cstring","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/typeinfo","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vcruntime_typeinfo.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xmemory","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/cstdint","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/xatomic.h","c:/pyprojects/robotics/liftbot/include/vex_brain.h","c:/pyprojects/robotics/liftbot/include/vex_drivetrain.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/vadefs.h","c:/pyprojects/robotics/liftbot/include/vex_task.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/sys/types.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/mmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/zmmintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/ammintrin.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/isa_availability.h","c:/pyprojects/robotics/liftbot/include/vex_event.h","c:/pyprojects/robotics/liftbot/include/vex_mevent.h","c:/pyprojects/robotics/liftbot/include/vex_units.h","c:/pyprojects/robotics/liftbot/include/vex_color.h","c:/pyprojects/robotics/liftbot/include/vex_motor.h","c:/pyprojects/robotics/liftbot/include/vex_vision.h","c:/pyprojects/robotics/liftbot/include/vex_imu.h","c:/pyprojects/robotics/liftbot/include/vex_rotation.h","c:/pyprojects/robotics/liftbot/include/vex_optical.h","c:/pyprojects/robotics/liftbot/include/vex_distance.h","c:/pyprojects/robotics/liftbot/include/vex_electromag.h","c:/pyprojects/robotics/liftbot/include/vex_triport.h","c:/pyprojects/robotics/liftbot/include/vex_timer.h","c:/pyprojects/robotics/liftbot/include/vex_global.h","c:/pyprojects/robotics/liftbot/include/vex_competition.h","c:/pyprojects/robotics/liftbot/include/vex_motorgroup.h","c:/pyprojects/robotics/liftbot/include/vex_smartdrive.h","c:/pyprojects/robotics/liftbot/include/vex_vexlink.h","c:/pyprojects/robotics/liftbot/include/robot-config.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/concurrencysal.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/stdbool.h","c:/pyprojects/robotics/liftbot/include/v5_color.h","c:/pyprojects/robotics/liftbot/include/v5_apiprivate.h","c:/program files (x86)/windows kits/10/include/10.0.18362.0/ucrt/corecrt_share.h","c:/program files (x86)/microsoft visual studio/2019/community/vc/tools/msvc/14.28.29333/include/use_ansi.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":8368589376327801919,"detailed_name":"vex","short_name_offset":0,"short_name_size":3,"kind":3,"hover":"","comments":"","declarations":[],"spell":"24:11-24:14|-1|1|2","extent":"24:1-296:2|-1|1|0","bases":[1],"derived":[6],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["24:11-24:14|-1|1|4"]},{"id":1,"usr":13838176792705659279,"detailed_name":"<fundamental>","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[0],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":2,"usr":6815710052609969971,"detailed_name":"vex::thread","short_name_offset":5,"short_name_size":6,"kind":5,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@brief Use this class to create and control threads.","declarations":["36:7-36:13|-1|1|4","43:7-43:13|-1|1|4","51:7-51:13|-1|1|4","58:7-58:13|-1|1|4","66:7-66:13|-1|1|4","67:8-67:14|-1|1|4"],"spell":"29:9-29:15|0|2|2","extent":"29:3-178:4|0|2|0","bases":[],"derived":[],"types":[],"funcs":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"vars":[1,2],"instances":[9,10],"uses":["36:7-36:13|2|2|4","43:7-43:13|2|2|4","51:7-51:13|2|2|4","58:43-58:49|-1|1|4","58:7-58:13|2|2|4","66:56-66:62|-1|1|4","66:7-66:13|2|2|4","122:31-122:37|-1|1|4","177:31-177:37|-1|1|4","177:44-177:50|-1|1|4"]},{"id":3,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,2],"uses":[]},{"id":4,"usr":2,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[1,5],"uses":[]},{"id":5,"usr":11353837028888530222,"detailed_name":"int32_t","short_name_offset":0,"short_name_size":7,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[6,7,8],"uses":["69:20-69:27|-1|1|4","70:20-70:27|-1|1|4","71:20-71:27|-1|1|4","80:7-80:14|-1|1|4","148:38-148:45|-1|1|4","157:7-157:14|-1|1|4","167:15-167:22|-1|1|4","188:7-188:14|-1|1|4","252:38-252:45|-1|1|4","259:7-259:14|-1|1|4"]},{"id":6,"usr":15249173810729855724,"detailed_name":"vex::this_thread","short_name_offset":5,"short_name_size":11,"kind":3,"hover":"","comments":"","declarations":[],"spell":"180:13-180:24|0|2|2","extent":"180:3-260:6|0|2|0","bases":[0],"derived":[],"types":[],"funcs":[18,19,20,21,22,23,24,25],"vars":[],"instances":[],"uses":["180:13-180:24|0|2|4"]},{"id":7,"usr":16199156163178427820,"detailed_name":"uint32_t","short_name_offset":0,"short_name_size":8,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[13],"uses":["204:28-204:36|-1|1|4","229:30-229:38|-1|1|4","268:7-268:15|-1|1|4"]},{"id":8,"usr":6347407517096036498,"detailed_name":"_Rep","short_name_offset":0,"short_name_size":4,"kind":26,"hover":"","comments":"","declarations":[],"spell":"212:25-212:29|21|3|2","extent":"212:16-212:29|21|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["214:45-214:49|-1|1|4"]},{"id":9,"usr":17587052085415609283,"detailed_name":"_Period","short_name_offset":0,"short_name_size":7,"kind":26,"hover":"","comments":"","declarations":[],"spell":"212:40-212:47|21|3|2","extent":"212:31-212:47|21|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["214:51-214:58|-1|1|4"]},{"id":10,"usr":5401847601697785946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["214:23-214:26|6|2|4","238:25-238:28|6|2|4"]},{"id":11,"usr":9184737725644812968,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["214:28-214:34|6|2|4","238:30-238:36|6|2|4"]},{"id":12,"usr":676085358395130732,"detailed_name":"std::chrono::duration","short_name_offset":13,"short_name_size":8,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[11],"uses":["214:36-214:44|-1|1|4"]},{"id":13,"usr":11124659622656034202,"detailed_name":"_Clock","short_name_offset":0,"short_name_size":6,"kind":26,"hover":"","comments":"","declarations":[],"spell":"236:25-236:31|23|3|2","extent":"236:16-236:31|23|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["238:49-238:55|-1|1|4"]},{"id":14,"usr":17847797384226627061,"detailed_name":"_Duration","short_name_offset":0,"short_name_size":9,"kind":26,"hover":"","comments":"","declarations":[],"spell":"236:42-236:51|23|3|2","extent":"236:33-236:51|23|3|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["238:57-238:66|-1|1|4"]},{"id":15,"usr":5294209397504413333,"detailed_name":"std::chrono::time_point","short_name_offset":13,"short_name_size":10,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[12],"uses":["238:38-238:48|-1|1|4"]},{"id":16,"usr":7799993353259126626,"detailed_name":"vex::mutex","short_name_offset":5,"short_name_size":5,"kind":5,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@brief Use this class to create and control mutexes.","declarations":["271:7-271:12|-1|1|4","272:8-272:13|-1|1|4"],"spell":"266:9-266:14|0|2|2","extent":"266:3-295:4|0|2|0","bases":[],"derived":[],"types":[],"funcs":[26,27,28,29,30],"vars":[13],"instances":[],"uses":["271:7-271:12|16|2|4"]}],"funcs":[{"id":0,"usr":15544554830192319184,"detailed_name":"void vex::thread::thread()","short_name_offset":10,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"","declarations":[],"spell":"36:7-36:13|2|2|2","extent":"36:7-36:38|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":7102015219042058012,"detailed_name":"void vex::thread::thread(int (*)() callback)","short_name_offset":10,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{constructor|none}\r\n@brief Creates a thread object.\r\n@param callback A reference to a function.","declarations":[{"spell":"43:7-43:13|2|2|1","param_spellings":["43:23-43:31"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["58:43-58:49|3|3|32"],"callees":[]},{"id":2,"usr":7849147012862566001,"detailed_name":"void vex::thread::thread(int (*)(void *) callback, void *arg)","short_name_offset":10,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{none}\r\n@brief Creates a thread object.\r\n@param callback A reference to a function.\r\n@param arg A void pointer that is passed to the callback.","declarations":[{"spell":"51:7-51:13|2|2|1","param_spellings":["51:23-51:31","51:48-51:51"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["66:56-66:62|4|3|32"],"callees":[]},{"id":3,"usr":9662126384195768245,"detailed_name":"void vex::thread::thread(void (*)() callback)","short_name_offset":10,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{constructor|none}\r\n@brief Creates a thread object.\r\n@param callback A reference to a function.","declarations":[],"spell":"58:7-58:13|2|2|2","extent":"58:7-58:80|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[3],"uses":[],"callees":["58:43-58:49|1|3|32"]},{"id":4,"usr":5848879520447015049,"detailed_name":"void vex::thread::thread(void (*)(void *) callback, void *arg)","short_name_offset":10,"short_name_size":6,"kind":9,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{none}\r\n@brief Creates a thread object.\r\n@param callback A reference to a function.\r\n@param arg A void pointer that is passed to the callback.","declarations":[],"spell":"66:7-66:13|2|2|2","extent":"66:7-66:100|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[4,5],"uses":[],"callees":["66:56-66:62|2|3|32"]},{"id":5,"usr":2976909694329381618,"detailed_name":"void vex::thread::~thread() noexcept","short_name_offset":18,"short_name_size":7,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"67:7-67:14|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":6,"usr":11876756331542133735,"detailed_name":"int32_t vex::thread::get_id()","short_name_offset":21,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@block_sig{Thread.get_id()}\r\n@brief Gets the ID of the thread.\r\n@return Returns an integer that represents the thread's ID.","declarations":[{"spell":"80:25-80:31|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":7,"usr":17403722327635390455,"detailed_name":"void vex::thread::join()","short_name_offset":18,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@block_sig{Thread.join();}\r\n@brief Waits for the other thread to finish its execution.","declarations":[{"spell":"88:25-88:29|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":8,"usr":3874404432124111811,"detailed_name":"void vex::thread::detach()","short_name_offset":18,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@block_sig{Thread.detach();}\r\n@brief Permits the thread to execute from the thread handle.","declarations":[],"spell":"96:25-96:31|2|2|2","extent":"96:7-96:36|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":9,"usr":16584298637920161966,"detailed_name":"bool vex::thread::joinable()","short_name_offset":18,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@block_sig{Thread.joinable()}\r\n@brief Checks whether the thread is joinable.\r\n@return Returns a true Boolean if the thread is joinable.","declarations":[{"spell":"105:25-105:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":10,"usr":5075997058100666658,"detailed_name":"void *vex::thread::native_handle()","short_name_offset":19,"short_name_size":13,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{setting|none}\r\n@block_sig{Thread.native_handle();}\r\n@brief Gets the pointer to the native handle of the thread.","declarations":[{"spell":"113:25-113:38|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":11,"usr":2100099994758253644,"detailed_name":"void vex::thread::swap(vex::thread &__t)","short_name_offset":18,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@block_sig{Thread.swap(thread1);}\r\n@brief Swaps the thread IDs with another specified thread in the parameter.\r\n@param __t The thread to swap to.","declarations":[{"spell":"122:25-122:29|2|2|1","param_spellings":["122:39-122:42"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":["177:64-177:68|17|3|32"],"callees":[]},{"id":12,"usr":14675384046485182601,"detailed_name":"void vex::thread::interrupt()","short_name_offset":18,"short_name_size":9,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@block_sig{Thread.interrupt();}\r\n@brief Stops the thread.","declarations":[{"spell":"131:25-131:34|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":13,"usr":5543971939859157877,"detailed_name":"void vex::thread::interruptAll()","short_name_offset":18,"short_name_size":12,"kind":254,"storage":3,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{none}\r\n@block_sig{Thread.interruptAll();}\r\n@brief Stop all threads except main.","declarations":[{"spell":"139:25-139:37|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":14,"usr":12958048986181020762,"detailed_name":"void vex::thread::setPriority(int32_t priority)","short_name_offset":18,"short_name_size":11,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{setting|none}\r\n@block_sig{thread.setPriority(1);}\r\n@brief Sets the priority of the thread.\r\n@param priority The priority of the thread to be set to.","declarations":[{"spell":"148:25-148:36|2|2|1","param_spellings":["148:46-148:54"]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":15,"usr":8697799941901540989,"detailed_name":"int32_t vex::thread::priority()","short_name_offset":21,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@block_sig{Thread.priority()}\r\n@brief Gets the priority of the thread.\r\n@return Returns the priority of the thread as an integer.","declarations":[{"spell":"157:25-157:33|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":16,"usr":14505139960882632169,"detailed_name":"int32_t vex::thread::hardware_concurrency()","short_name_offset":21,"short_name_size":20,"kind":254,"storage":3,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@block_sig{Thread.hardware_concurrency()}\r\n@brief Gets the number of concurrent threads supported by the hardware.\r\n@return An integer that represents the amount of concurrent threads supported by the hardware.","declarations":[{"spell":"167:25-167:45|2|2|1","param_spellings":[]}],"declaring_type":2,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":17,"usr":10933147780897078970,"detailed_name":"void vex::thread::swap(vex::thread &__x, vex::thread &__y)","short_name_offset":18,"short_name_size":4,"kind":254,"storage":3,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@block_sig{Thread.swap(thread1, thread2);}\r\n@brief Swaps two threads specified in the parameters.\r\n@param __x A thread to swap with the next thread set in the parameter.\r\n@param __y A thread to swap with the previous thread set in the parameter.","declarations":[],"spell":"177:25-177:29|2|2|2","extent":"177:7-177:76|2|2|0","declaring_type":2,"bases":[],"derived":[],"vars":[9,10],"uses":[],"callees":["177:64-177:68|11|3|32"]},{"id":18,"usr":704833166612856005,"detailed_name":"int32_t vex::this_thread::get_id()","short_name_offset":26,"short_name_size":6,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@brief Gets the ID of the thread\r\n@return Returns an integer that represents the thread's ID.","declarations":[{"spell":"188:17-188:23|6|2|1","param_spellings":[]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":19,"usr":10395918784362980442,"detailed_name":"void vex::this_thread::yield()","short_name_offset":23,"short_name_size":5,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Suspends the current thread.","declarations":[{"spell":"195:17-195:22|6|2|1","param_spellings":[]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":20,"usr":18071662317443572646,"detailed_name":"void vex::this_thread::sleep_for(uint32_t time)","short_name_offset":23,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"sleep_for\r\n\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Suspends the current thread until the time is expired in milliseconds.\r\n@param time The amount of time for the thread to sleep.","declarations":[{"spell":"204:17-204:26|6|2|1","param_spellings":["204:37-204:41"]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":21,"usr":1759959126664564899,"detailed_name":"void vex::this_thread::sleep_for(const std::chrono::duration<_Rep __rtime, _Period> &)","short_name_offset":23,"short_name_size":9,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Suspends the current thread until the time is expired in milliseconds.\r\n@param __rtime The standard chrono::duration object representing the time to sleep.","declarations":[],"spell":"214:7-214:16|6|2|2","extent":"213:7-214:69|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[11],"uses":[],"callees":[]},{"id":22,"usr":9834022215319098608,"detailed_name":"void vex::this_thread::sleep_until(uint32_t time)","short_name_offset":23,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"sleep_until\r\n\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Sleeps until the system timer reaches the time specified in the parameter.\r\n@param time The amount of time for the thread to sleep.","declarations":[{"spell":"229:17-229:28|6|2|1","param_spellings":["229:39-229:43"]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":23,"usr":880995075407034603,"detailed_name":"void vex::this_thread::sleep_until(const std::chrono::time_point<_Clock __atime, _Duration> &)","short_name_offset":23,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Sleeps until the system timer reaches the time specified in the parameter.\r\n@param __atime The standard chrono::time_point object representing the time to sleep.","declarations":[],"spell":"238:7-238:18|6|2|2","extent":"237:7-238:77|6|2|0","declaring_type":6,"bases":[],"derived":[],"vars":[12],"uses":[],"callees":[]},{"id":24,"usr":10001770826172320870,"detailed_name":"void vex::this_thread::setPriority(int32_t priority)","short_name_offset":23,"short_name_size":11,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{setting|none}\r\n@brief Sets the priority of the current thread.\r\n@param priority The priority of the thread to be set to.","declarations":[{"spell":"252:25-252:36|6|2|1","param_spellings":["252:46-252:54"]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":25,"usr":11295661060688750217,"detailed_name":"int32_t vex::this_thread::priority()","short_name_offset":26,"short_name_size":8,"kind":12,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{sensing|none}\r\n@brief Gets the priority of the current thread.\r\n@return Returns the priority of the current thread as an integer.","declarations":[{"spell":"259:25-259:33|6|2|1","param_spellings":[]}],"declaring_type":6,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":26,"usr":12161173256140673239,"detailed_name":"void vex::mutex::mutex()","short_name_offset":10,"short_name_size":5,"kind":9,"storage":1,"hover":"","comments":"","declarations":[{"spell":"271:7-271:12|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":27,"usr":10238643620213330890,"detailed_name":"void vex::mutex::~mutex()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"","declarations":[{"spell":"272:7-272:13|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":28,"usr":10576065005466461272,"detailed_name":"void vex::mutex::lock()","short_name_offset":17,"short_name_size":4,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Locks the mutex and blocks if the mutex is not available.","declarations":[{"spell":"279:13-279:17|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":29,"usr":872913627914353980,"detailed_name":"bool vex::mutex::try_lock()","short_name_offset":17,"short_name_size":8,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Try to lock the mutex and returns if the mutex is not available.\r\n@return Returns true if successful and false if the mutex is owned by another thread.","declarations":[{"spell":"287:13-287:21|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":30,"usr":17776799768922216911,"detailed_name":"void vex::mutex::unlock()","short_name_offset":17,"short_name_size":6,"kind":6,"storage":1,"hover":"","comments":"\r\n@prog_lang{pro}\r\n@drawer_cat{action|none}\r\n@brief Unlocks the mutex.","declarations":[{"spell":"294:13-294:19|16|2|1","param_spellings":[]}],"declaring_type":16,"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":6757231075860306360,"detailed_name":"int vex::thread::_labelId","short_name_offset":17,"short_name_size":8,"hover":"","comments":"","declarations":["31:21-31:29|2|2|1"],"type":3,"uses":[],"kind":8,"storage":3},{"id":1,"usr":8927168948865943339,"detailed_name":"void *vex::thread::_callback","short_name_offset":19,"short_name_size":9,"hover":"","comments":"","declarations":[],"spell":"32:21-32:30|2|2|2","extent":"32:7-32:30|2|2|0","type":4,"uses":["36:18-36:27|0|3|4"],"kind":8,"storage":0},{"id":2,"usr":739337484593607554,"detailed_name":"int vex::thread::_callbackId","short_name_offset":17,"short_name_size":11,"hover":"","comments":"","declarations":[],"spell":"33:21-33:32|2|2|2","extent":"33:7-33:32|2|2|0","type":3,"uses":[],"kind":8,"storage":0},{"id":3,"usr":17392976295118450504,"detailed_name":"void (*)() callback","short_name_offset":11,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"58:23-58:31|3|3|2","extent":"58:15-58:38|3|3|0","uses":["58:67-58:75|3|3|4"],"kind":253,"storage":1},{"id":4,"usr":204463866001453695,"detailed_name":"void (*)(void *) callback","short_name_offset":17,"short_name_size":8,"hover":"","comments":"","declarations":[],"spell":"66:23-66:31|4|3|2","extent":"66:15-66:40|4|3|0","uses":["66:82-66:90|4|3|4"],"kind":253,"storage":1},{"id":5,"usr":2916662370506858230,"detailed_name":"void *arg","short_name_offset":6,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"66:48-66:51|4|3|2","extent":"66:42-66:51|4|3|0","type":4,"uses":["66:92-66:95|4|3|4"],"kind":253,"storage":1},{"id":6,"usr":7797237140417954159,"detailed_name":"const int32_t vex::thread::threadPrioritylow","short_name_offset":27,"short_name_size":17,"hover":"const int32_t vex::thread::threadPrioritylow    =  1","comments":"","declarations":["69:28-69:45|2|2|1"],"type":5,"uses":[],"kind":8,"storage":3},{"id":7,"usr":13722683127987318805,"detailed_name":"const int32_t vex::thread::threadPriorityNormal","short_name_offset":27,"short_name_size":20,"hover":"const int32_t vex::thread::threadPriorityNormal =  7","comments":"","declarations":["70:28-70:48|2|2|1"],"type":5,"uses":[],"kind":8,"storage":3},{"id":8,"usr":5018977599530688903,"detailed_name":"const int32_t vex::thread::threadPriorityHigh","short_name_offset":27,"short_name_size":18,"hover":"const int32_t vex::thread::threadPriorityHigh   = 15","comments":"","declarations":["71:28-71:46|2|2|1"],"type":5,"uses":[],"kind":8,"storage":3},{"id":9,"usr":15422207469838158420,"detailed_name":"vex::thread &__x","short_name_offset":13,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"177:39-177:42|17|3|2","extent":"177:31-177:42|17|3|0","type":2,"uses":["177:60-177:63|17|3|4"],"kind":253,"storage":1},{"id":10,"usr":13872049482096404720,"detailed_name":"vex::thread &__y","short_name_offset":13,"short_name_size":3,"hover":"","comments":"","declarations":[],"spell":"177:52-177:55|17|3|2","extent":"177:44-177:55|17|3|0","type":2,"uses":["177:69-177:72|17|3|4"],"kind":253,"storage":1},{"id":11,"usr":8986057042330450151,"detailed_name":"const std::chrono::duration<_Rep, _Period> &__rtime","short_name_offset":44,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"214:61-214:68|21|3|2","extent":"214:17-214:68|21|3|0","type":12,"uses":[],"kind":253,"storage":1},{"id":12,"usr":173009643226154556,"detailed_name":"const std::chrono::time_point<_Clock, _Duration> &__atime","short_name_offset":50,"short_name_size":7,"hover":"","comments":"","declarations":[],"spell":"238:69-238:76|23|3|2","extent":"238:19-238:76|23|3|0","type":15,"uses":[],"kind":253,"storage":1},{"id":13,"usr":16148512212238916566,"detailed_name":"uint32_t vex::mutex::_sem","short_name_offset":21,"short_name_size":4,"hover":"","comments":"","declarations":[],"spell":"268:17-268:21|16|2|2","extent":"268:7-268:21|16|2|0","type":7,"uses":[],"kind":8,"storage":0},{"id":14,"usr":3993230404686220157,"detailed_name":"VEX_THREAD_CLASS_H","short_name_offset":0,"short_name_size":18,"hover":"#define VEX_THREAD_CLASS_H","comments":"","declarations":[],"spell":"15:11-15:29|-1|1|2","extent":"15:11-15:29|-1|1|0","uses":[],"kind":255,"storage":0},{"id":15,"usr":291038054068649371,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["36:29-36:33|-1|1|4"],"kind":0,"storage":0}]}